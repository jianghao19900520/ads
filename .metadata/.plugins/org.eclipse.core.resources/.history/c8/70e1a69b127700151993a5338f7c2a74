package com.jianghao.myjpush;

import cn.jpush.android.api.BasicPushNotificationBuilder;
import cn.jpush.android.api.CustomPushNotificationBuilder;
import cn.jpush.android.api.JPushInterface;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.Bundle;
import android.support.v4.app.NotificationCompat;
import android.util.Log;
import android.widget.RemoteViews;

public class MyReceiver extends BroadcastReceiver
{

	private static final String TAG = "MyReceiver";

	@Override
	public void onReceive(Context context, Intent intent)
	{
		// TODO Auto-generated method stub
		Bundle bundle = intent.getExtras();
		if (JPushInterface.ACTION_REGISTRATION_ID.equals(intent.getAction()))
		{
			Log.i(TAG, "JPush用户注册成功");
		}
		else if (JPushInterface.ACTION_MESSAGE_RECEIVED.equals(intent.getAction()))
		{
			Log.i(TAG, "接受到推送下来的自定义消息");
			receivingNotification(context, bundle);
		}
		else if (JPushInterface.ACTION_NOTIFICATION_RECEIVED.equals(intent.getAction()))
		{
			Log.i(TAG, "接受到推送下来的通知");

		}
		else if (JPushInterface.ACTION_NOTIFICATION_OPENED.equals(intent.getAction()))
		{
			Log.i(TAG, "用户点击打开了通知");
			// openNotification(context, bundle);
		}
	}

	private void receivingNotification(Context context, Bundle bundle)
	{
		// NotificationManager manager = (NotificationManager) context
		// .getSystemService(Context.NOTIFICATION_SERVICE);
		// String message = bundle.getString(JPushInterface.EXTRA_MESSAGE);
		// String extras = bundle.getString(JPushInterface.EXTRA_EXTRA);
		// // 使用notification
		// // 使用广播或者通知进行内容的显示
		// NotificationCompat.Builder builder = new NotificationCompat.Builder(
		// context);
		// builder.setContentText(message).setSmallIcon(R.drawable.ic_launcher).setContentTitle(JPushInterface.EXTRA_TITLE);
		// builder.setDefaults(Notification.DEFAULT_SOUND);
		// manager.notify(1,builder.build());

		long when = System.currentTimeMillis();  
        Notification notification = new Notification(R.drawable.ic_launcher, "滚动", when);  
          
        //不能手动清理  
        //notification.flags= Notification.FLAG_NO_CLEAR;  
        //添加音乐  
        //notification.sound = Uri.parse("/sdcard/haha.mp3");   
          
        //设置用户点击notification的动作   
        // pendingIntent 延期的意图   
        Intent intent = new Intent(context,MainActivity.class);  
        PendingIntent pendingIntent  = PendingIntent.getActivity(this, 0, intent, 0);  
        notification.contentIntent = pendingIntent;  
         
        //自定义界面   
        RemoteViews rv = new RemoteViews(getPackageName(), R.layout.noti_layout);  
        rv.setTextViewText(R.id.tv_rv, "我是自定义的 notification");  
        rv.setProgressBar(R.id.pb_rv, 80, 20, false);  
        notification.contentView = rv;  
          
        //把定义的notification 传递给 notificationmanager   
        notificationManager.notify(0, notification);  
	}

}
